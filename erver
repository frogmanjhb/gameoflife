[33mcommit 9f57f6e9935cf6d34425503f6bd3beeb61dea10b[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: frogmanjhb <seancreamer62@gmail.com>
Date:   Wed Sep 17 13:46:56 2025 +0200

    Update API base URL and CORS configuration for production environment; add PostgreSQL dependencies

[1mdiff --git a/DEPLOYMENT.md b/DEPLOYMENT.md[m
[1mnew file mode 100644[m
[1mindex 00000000..3c8152d2[m
[1m--- /dev/null[m
[1m+++ b/DEPLOYMENT.md[m
[36m@@ -0,0 +1,115 @@[m
[32m+[m[32m# ðŸš€ Render Deployment Guide[m
[32m+[m
[32m+[m[32m## Prerequisites[m
[32m+[m[32m1. GitHub account[m
[32m+[m[32m2. Render account (free at render.com)[m
[32m+[m[32m3. Your code pushed to GitHub[m
[32m+[m
[32m+[m[32m## Step 1: Prepare Your Repository[m
[32m+[m
[32m+[m[32m1. **Push your code to GitHub**:[m
[32m+[m[32m   ```bash[m
[32m+[m[32m   git add .[m
[32m+[m[32m   git commit -m "Prepare for Render deployment"[m
[32m+[m[32m   git push origin main[m
[32m+[m[32m   ```[m
[32m+[m
[32m+[m[32m## Step 2: Deploy Backend (API)[m
[32m+[m
[32m+[m[32m1. **Go to Render Dashboard**: https://dashboard.render.com[m
[32m+[m[32m2. **Click "New +" â†’ "Web Service"**[m
[32m+[m[32m3. **Connect your GitHub repository**[m
[32m+[m[32m4. **Configure the backend service**:[m
[32m+[m[32m   - **Name**: `gameoflife-backend`[m
[32m+[m[32m   - **Environment**: `Node`[m
[32m+[m[32m   - **Build Command**: `cd server && npm install && npm run build`[m
[32m+[m[32m   - **Start Command**: `cd server && npm start`[m
[32m+[m[32m   - **Plan**: Free[m
[32m+[m
[32m+[m[32m5. **Add Environment Variables**:[m
[32m+[m[32m   - `NODE_ENV` = `production`[m
[32m+[m[32m   - `JWT_SECRET` = `your-super-secret-jwt-key-change-in-production`[m
[32m+[m[32m   - `CLIENT_URL` = `https://your-frontend-url.onrender.com` (update after frontend deploy)[m
[32m+[m
[32m+[m[32m6. **Add PostgreSQL Database**:[m
[32m+[m[32m   - Click "New +" â†’ "PostgreSQL"[m
[32m+[m[32m   - **Name**: `gameoflife-db`[m
[32m+[m[32m   - **Plan**: Free[m
[32m+[m[32m   - Copy the `DATABASE_URL` and add it as an environment variable[m
[32m+[m
[32m+[m[32m7. **Deploy!** Click "Create Web Service"[m
[32m+[m
[32m+[m[32m## Step 3: Deploy Frontend[m
[32m+[m
[32m+[m[32m1. **Click "New +" â†’ "Static Site"**[m
[32m+[m[32m2. **Connect your GitHub repository**[m
[32m+[m[32m3. **Configure the frontend service**:[m
[32m+[m[32m   - **Name**: `gameoflife-frontend`[m
[32m+[m[32m   - **Build Command**: `cd client && npm install && npm run build`[m
[32m+[m[32m   - **Publish Directory**: `client/dist`[m
[32m+[m[32m   - **Plan**: Free[m
[32m+[m
[32m+[m[32m4. **Deploy!** Click "Create Static Site"[m
[32m+[m
[32m+[m[32m## Step 4: Update Environment Variables[m
[32m+[m
[32m+[m[32m1. **Get your frontend URL** from Render dashboard[m
[32m+[m[32m2. **Update backend environment variable**:[m
[32m+[m[32m   - Go to backend service settings[m
[32m+[m[32m   - Update `CLIENT_URL` to your frontend URL[m
[32m+[m[32m   - Redeploy the backend[m
[32m+[m
[32m+[m[32m## Step 5: Initialize Database[m
[32m+[m
[32m+[m[32m1. **Connect to your PostgreSQL database**[m
[32m+[m[32m2. **Run the schema**:[m
[32m+[m[32m   ```sql[m
[32m+[m[32m   -- Copy and paste the contents of server/src/database/schema-postgres.sql[m
[32m+[m[32m   ```[m
[32m+[m
[32m+[m[32m## Step 6: Test Your Deployment[m
[32m+[m
[32m+[m[32m1. **Visit your frontend URL**[m
[32m+[m[32m2. **Register as a teacher**[m
[32m+[m[32m3. **Register as a student**[m
[32m+[m[32m4. **Test all features**[m
[32m+[m
[32m+[m[32m## Environment Variables Summary[m
[32m+[m
[32m+[m[32m### Backend (API)[m
[32m+[m[32m- `NODE_ENV` = `production`[m
[32m+[m[32m- `JWT_SECRET` = `your-secret-key`[m
[32m+[m[32m- `DATABASE_URL` = `postgresql://...` (from Render database)[m
[32m+[m[32m- `CLIENT_URL` = `https://your-frontend.onrender.com`[m
[32m+[m
[32m+[m[32m### Frontend[m
[32m+[m[32m- `NODE_ENV` = `production`[m
[32m+[m
[32m+[m[32m## Troubleshooting[m
[32m+[m
[32m+[m[32m### Common Issues:[m
[32m+[m[32m1. **CORS errors**: Make sure `CLIENT_URL` is set correctly[m
[32m+[m[32m2. **Database connection**: Check `DATABASE_URL` is correct[m
[32m+[m[32m3. **Build failures**: Check build commands and dependencies[m
[32m+[m
[32m+[m[32m### Logs:[m
[32m+[m[32m- Check Render dashboard for build and runtime logs[m
[32m+[m[32m- Backend logs: Service â†’ Logs[m
[32m+[m[32m- Frontend logs: Static Site â†’ Logs[m
[32m+[m
[32m+[m[32m## Cost[m
[32m+[m[32m- **Free tier**: Perfect for classroom use[m
[32m+[m[32m- **Backend**: 750 hours/month free[m
[32m+[m[32m- **Frontend**: Unlimited static hosting[m
[32m+[m[32m- **Database**: 1GB storage free[m
[32m+[m
[32m+[m[32m## Custom Domain (Optional)[m
[32m+[m[32m1. Go to service settings[m
[32m+[m[32m2. Add your custom domain[m
[32m+[m[32m3. Update DNS records as instructed[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m**Your Game of Life Classroom Simulation is now live! ðŸŽ‰**[m
[32m+[m
[32m+[m[32mShare the frontend URL with your students and start the financial literacy simulation![m
[1mdiff --git a/client/src/services/api.ts b/client/src/services/api.ts[m
[1mindex 260dd116..28250847 100644[m
[1m--- a/client/src/services/api.ts[m
[1m+++ b/client/src/services/api.ts[m
[36m@@ -1,7 +1,9 @@[m
 import axios from 'axios';[m
 [m
 const api = axios.create({[m
[31m-  baseURL: 'http://localhost:5000/api',[m
[32m+[m[32m  baseURL: process.env.NODE_ENV === 'production'[m[41m [m
[32m+[m[32m    ? '/api'[m[41m [m
[32m+[m[32m    : 'http://localhost:5000/api',[m
   headers: {[m
     'Content-Type': 'application/json',[m
   },[m
[1mdiff --git a/render.yaml b/render.yaml[m
[1mnew file mode 100644[m
[1mindex 00000000..8e021a67[m
[1m--- /dev/null[m
[1m+++ b/render.yaml[m
[36m@@ -0,0 +1,31 @@[m
[32m+[m[32mservices:[m
[32m+[m[32m  - type: web[m
[32m+[m[32m    name: gameoflife-backend[m
[32m+[m[32m    env: node[m
[32m+[m[32m    plan: free[m
[32m+[m[32m    buildCommand: cd server && npm install && npm run build[m
[32m+[m[32m    startCommand: cd server && npm start[m
[32m+[m[32m    envVars:[m
[32m+[m[32m      - key: NODE_ENV[m
[32m+[m[32m        value: production[m
[32m+[m[32m      - key: JWT_SECRET[m
[32m+[m[32m        generateValue: true[m
[32m+[m[32m      - key: DATABASE_URL[m
[32m+[m[32m        fromDatabase:[m
[32m+[m[32m          name: gameoflife-db[m
[32m+[m[32m          property: connectionString[m
[32m+[m[32m      - key: CLIENT_URL[m
[32m+[m[32m        value: https://gameoflife-frontend.onrender.com[m
[32m+[m
[32m+[m[32m  - type: web[m
[32m+[m[32m    name: gameoflife-frontend[m
[32m+[m[32m    env: static[m
[32m+[m[32m    buildCommand: cd client && npm install && npm run build[m
[32m+[m[32m    staticPublishPath: ./client/dist[m
[32m+[m[32m    envVars:[m
[32m+[m[32m      - key: NODE_ENV[m
[32m+[m[32m        value: production[m
[32m+[m
[32m+[m[32mdatabases:[m
[32m+[m[32m  - name: gameoflife-db[m
[32m+[m[32m    plan: free[m
[1mdiff --git a/server/env.production b/server/env.production[m
[1mnew file mode 100644[m
[1mindex 00000000..23c8d90b[m
[1m--- /dev/null[m
[1m+++ b/server/env.production[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32mNODE_ENV=production[m
[32m+[m[32mPORT=10000[m
[32m+[m[32mJWT_SECRET=your-super-secret-jwt-key-change-in-production[m
[32m+[m[32mDATABASE_URL=postgresql://username:password@host:port/database[m
[32m+[m[32mCLIENT_URL=https://your-frontend-url.onrender.com[m
[1mdiff --git a/server/package.json b/server/package.json[m
[1mindex a27dded0..4f3d699c 100644[m
[1m--- a/server/package.json[m
[1m+++ b/server/package.json[m
[36m@@ -15,6 +15,7 @@[m
     "bcryptjs": "^2.4.3",[m
  